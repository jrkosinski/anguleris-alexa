{
  "_args": [
    [
      {
        "raw": "doctoc@^1.2.0",
        "scope": null,
        "escapedName": "doctoc",
        "name": "doctoc",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "D:\\Clients\\Anguleris\\Code\\anguleris-alexa-skill\\node_modules\\alexia"
    ]
  ],
  "_from": "doctoc@>=1.2.0 <2.0.0",
  "_id": "doctoc@1.3.1",
  "_inCache": true,
  "_location": "/doctoc",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/doctoc_1.3.1_1518625666850_0.13430992135753872"
  },
  "_npmUser": {
    "name": "thlorenz",
    "email": "thlorenz@gmx.de"
  },
  "_npmVersion": "2.15.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "doctoc@^1.2.0",
    "scope": null,
    "escapedName": "doctoc",
    "name": "doctoc",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/alexia"
  ],
  "_resolved": "https://registry.npmjs.org/doctoc/-/doctoc-1.3.1.tgz",
  "_shasum": "f012e3603e3156254c2ef22ac88c7190f55426ba",
  "_shrinkwrap": null,
  "_spec": "doctoc@^1.2.0",
  "_where": "D:\\Clients\\Anguleris\\Code\\anguleris-alexa-skill\\node_modules\\alexia",
  "author": {
    "name": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "thlorenz.com"
  },
  "bin": {
    "doctoc": "doctoc.js"
  },
  "bugs": {
    "url": "https://github.com/thlorenz/doctoc/issues"
  },
  "dependencies": {
    "anchor-markdown-header": "^0.5.5",
    "htmlparser2": "~3.9.2",
    "markdown-to-ast": "~3.4.0",
    "minimist": "~1.2.0",
    "underscore": "~1.8.3",
    "update-section": "^0.3.0"
  },
  "description": "Generates TOC for markdown files of local git repo.",
  "devDependencies": {
    "tap": "~10.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f012e3603e3156254c2ef22ac88c7190f55426ba",
    "tarball": "https://registry.npmjs.org/doctoc/-/doctoc-1.3.1.tgz",
    "fileCount": 24,
    "unpackedSize": 48219
  },
  "engines": {
    "node": ">=0.4"
  },
  "gitHead": "30d6569411aac6b48f89cbdc8b90c708381afbf7",
  "homepage": "https://github.com/thlorenz/doctoc#readme",
  "keywords": [
    "github",
    "markdown",
    "documentation",
    "readme",
    "parser",
    "bitbucket",
    "gitlab",
    "ghost"
  ],
  "license": "MIT",
  "main": "doctoc.js",
  "maintainers": [
    {
      "name": "thlorenz",
      "email": "thlorenz@gmx.de"
    }
  ],
  "name": "doctoc",
  "optionalDependencies": {},
  "readme": "# DocToc [![build status](https://secure.travis-ci.org/thlorenz/doctoc.svg)](http://travis-ci.org/thlorenz/doctoc)\n\n<a href=\"https://www.patreon.com/bePatron?u=8663953\"><img alt=\"become a patron\" src=\"https://c5.patreon.com/external/logo/become_a_patron_button.png\" height=\"35px\"></a>\n\nGenerates table of contents for markdown files inside local git repository. Links are compatible with anchors generated\nby github or other sites via a command line flag.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Adding toc to all files in a directory and sub directories](#adding-toc-to-all-files-in-a-directory-and-sub-directories)\n  - [Update existing doctoc TOCs effortlessly](#update-existing-doctoc-tocs-effortlessly)\n  - [Adding toc to individual files](#adding-toc-to-individual-files)\n    - [Examples](#examples)\n  - [Using doctoc to generate links compatible with other sites](#using-doctoc-to-generate-links-compatible-with-other-sites)\n    - [Example](#example)\n  - [Specifying location of toc](#specifying-location-of-toc)\n  - [Specifying a custom TOC title](#specifying-a-custom-toc-title)\n  - [Specifying a maximum heading level for TOC entries](#specifying-a-maximum-heading-level-for-toc-entries)\n  - [Printing to stdout](#printing-to-stdout)\n  - [Usage as a `git` hook](#usage-as-a-git-hook)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n\n## Installation\n\n    npm install -g doctoc\n\n## Usage\n\nIn its simplest usage, you can pass one or more files or folders to the\n`doctoc` command. This will update the TOCs of each file specified as well as of\neach markdown file found by recursively searching each folder. Below are some\nexamples.\n\n### Adding toc to all files in a directory and sub directories\n\nGo into the directory that contains you local git project and type:\n    \n    doctoc .\n\nThis will update all markdown files in the current directory and all its\nsubdirectories with a table of content that will point at the anchors generated\nby the markdown parser. Doctoc defaults to using the GitHub parser, but other\n[modes can be\nspecified](#using-doctoc-to-generate-links-compatible-with-other-sites).\n\n\n### Update existing doctoc TOCs effortlessly\n\nIf you already have a TOC inserted by doctoc, it will automatically be updated by running the command (rather than inserting a duplicate toc). Doctoc locates the TOC by the `<!-- START doctoc -->` and `<!-- END doctoc -->` comments, so you can also move a generated TOC to any other portion of your document and it will be updated there.\n\n### Adding toc to individual files\n\nIf you want to convert only specific files, do:\n\n    doctoc /path/to/file [...]\n\n#### Examples\n\n    doctoc README.md\n\n    doctoc CONTRIBUTING.md LICENSE.md\n\nYou can use this feature to do more sophisticated things. For example, if you\nhave [ack][ack] installed, you could add `<!-- DOCTOC SKIP -->` to specific\nfiles and then use\n\n    ack -L 'DOCTOC SKIP' | xargs doctoc\n\nto recompile only those files which don't have the DOCTOC SKIP comment.\n\n### Using doctoc to generate links compatible with other sites\n\nIn order to add a table of contents whose links are compatible other sites add the appropriate mode flag:\n\nAvailable modes are:\n\n```\n--bitbucket bitbucket.org\n--nodejs    nodejs.org\n--github    github.com\n--gitlab    gitlab.com\n--ghost     ghost.org\n```\n\n#### Example\n\n    doctoc README.md --bitbucket\n\n### Specifying location of toc\n\nBy default, doctoc places the toc at the top of the file. You can indicate to have it placed elsewhere with the following format:\n\n```\n<!-- START doctoc -->\n<!-- END doctoc -->\n```\n\nYou place this code directly in your .md file. For example:\n\n```\n// my_new_post.md\nHere we are, introducing the post. It's going to be great!\nBut first: a TOC for easy reference.\n\n<!-- START doctoc -->\n<!-- END doctoc -->\n\n# Section One\n\nHere we'll discuss...\n\n```\n\nRunning doctoc will insert the toc at that location.\n\n### Specifying a custom TOC title\n\nUse the `--title` option to specify a (Markdown-formatted) custom TOC title; e.g., `doctoc --title '**Contents**' .` From then on, you can simply run `doctoc <file>` and doctoc will will keep the title you specified.\n\nAlternatively, to blank out the title with a newline, use the `--notitle` option. This will simply remove the title from the TOC.\n\n### Specifying a maximum heading level for TOC entries\n\nUse the `--maxlevel` option to limit TOC entries to headings only up to the specified level; e.g., `doctoc --maxlevel 3 .`\n\nBy default,\n\n- no limit is placed on Markdown-formatted headings,\n- whereas headings from embedded HTML are limited to 4 levels.\n\n### Printing to stdout\n\nYou can print to stdout by using the `-s` or `--stdout` option.\n\n[ack]: http://beyondgrep.com/\n\n### Usage as a `git` hook\n\ndoctoc can be used as a [pre-commit](http://pre-commit.com) hook by using the\nfollowing configuration:\n\n```yaml\nrepos:\n-   repo: https://github.com/thlorenz/doctoc\n    sha: ...  # substitute a tagged version\n    hooks:\n    -   id: doctoc\n```\n\nThis will run `doctoc` against markdown files when committing to ensure the\nTOC stays up-to-date.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/doctoc.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "version": "1.3.1"
}
