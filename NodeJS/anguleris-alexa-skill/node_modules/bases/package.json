{
  "_args": [
    [
      {
        "raw": "bases@^0.2.1",
        "scope": null,
        "escapedName": "bases",
        "name": "bases",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "D:\\Clients\\Anguleris\\Code\\anguleris-alexa-skill\\node_modules\\alexia"
    ]
  ],
  "_from": "bases@>=0.2.1 <0.3.0",
  "_id": "bases@0.2.1",
  "_inCache": true,
  "_location": "/bases",
  "_npmUser": {
    "name": "aseemk",
    "email": "aseem.kishore@gmail.com"
  },
  "_npmVersion": "1.3.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bases@^0.2.1",
    "scope": null,
    "escapedName": "bases",
    "name": "bases",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/alexia"
  ],
  "_resolved": "https://registry.npmjs.org/bases/-/bases-0.2.1.tgz",
  "_shasum": "c0294a3f86d403d79b82ec4997b27caf90f44570",
  "_shrinkwrap": null,
  "_spec": "bases@^0.2.1",
  "_where": "D:\\Clients\\Anguleris\\Code\\anguleris-alexa-skill\\node_modules\\alexia",
  "author": {
    "name": "Aseem Kishore",
    "email": "aseem.kishore@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/aseemk/bases.js/issues"
  },
  "dependencies": {},
  "description": "Utility for converting numbers to/from different bases/alphabets.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "c0294a3f86d403d79b82ec4997b27caf90f44570",
    "tarball": "https://registry.npmjs.org/bases/-/bases-0.2.1.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/aseemk/bases.js",
  "keywords": [
    "alphabet",
    "base",
    "base-36",
    "base-58",
    "base-62"
  ],
  "main": "bases.js",
  "maintainers": [
    {
      "name": "aseemk",
      "email": "aseem.kishore@gmail.com"
    }
  ],
  "name": "bases",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/aseemk/bases.js.png?branch=master)](https://travis-ci.org/aseemk/bases.js)\n\n# bases.js\n\nUtility for converting numbers to/from different bases/alphabets.\nCommon bases have convenience aliases (see below), but arbitrary/custom\nalphabets can be used.\n\n## Installation\n\nOn the server side w/ Node.js:\n\n```\nnpm install bases\n```\n\nOr in the browser (adds a global `Bases` variable for now):\n\n```html\n<script src=\"bases.js\"></script>\n```\n\n## Usage\n\n```js\nvar bases = require('./bases');\n  // or window.Bases in the browser\n\nbases.toBase16(200);                // => 'c8'\nbases.toBase62(99999);              // => 'q0T'\nbases.toAlphabet(300, 'aAbBcC');    // => 'Abba'\n\nbases.fromBase16('c8');               // => 200\nbases.fromBase62('q0T');              // => 99999\nbases.fromAlphabet('Abba', 'aAbBcC'); // => 300\n```\n\n## API\n\nGoing from numbers to strings:\n\n- `toAlphabet(num, alphabet)`: returns a string representation of the given\n  number for the given alphabet, where the alphabet is an arbitrary string of\n  characters. (See known alphabets below for examples.)\n\n- `toBase(num, base)`: convenience helper for known bases (see below).\n\n- `toBaseX(num)`: convenience helpers for known bases (see below), e.g.\n  `toBase62(num)`.\n\nGoing from strings to numbers:\n\n- `fromAlphabet(str, alphabet)`: returns an integer representation of the given\n  string for the given alphabet.\n\n- `fromBase(num, base)`: convenience helper for known bases.\n\n- `fromBaseX(str)`: convenience helpers for known bases.\n\n## Known Bases/Alphabets\n\nNumbers only:\n\n<table>\n<tr>\n<td><strong>Base-2</strong></td>\n<td><code>01</code></td>\n</tr>\n<tr>\n<td><strong>...</strong></td>\n<td><code>012...</code></td>\n</tr>\n<tr>\n<td><strong>Base-10</strong></td>\n<td><code>0123456789</code></td>\n</tr>\n</table>\n\nLetters only:\n\n<table>\n<tr>\n<td><strong>Base-26</strong></td>\n<td><code>abcdefghijklmnopqrstuvwxyz</code></td>\n</tr>\n<tr>\n<td><strong>Base-52</strong></td>\n<td><code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code></td>\n</tr>\n</table>\n\nAlphanumeric:\n\n<table>\n<tr>\n<td><strong>Base-11</strong></td>\n<td><code>0123456789a</code></td>\n</tr>\n<tr>\n<td><strong>...</strong></td>\n<td><code>0123456789ab...</code></td>\n</tr>\n<tr>\n<td><strong>Base-16</strong></td>\n<td><code>0123456789abcdef</code></td>\n</tr>\n<tr>\n<td><strong>Base-36</strong></td>\n<td><code>0123456789abcdefghijklmnopqrstuvwxyz</code></td>\n</tr>\n<tr>\n<td><strong>Base-62</strong></td>\n<td><code>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code></td>\n</tr>\n</table>\n\nHuman-friendly:\n\n<table>\n<tr>\n<td><strong>Base-32</strong> (<a href=\"http://www.crockford.com/wrmg/base32.html\" target=\"_blank\">from Douglas Crockford</a>)</td>\n<td><code>0123456789ABCDEFGHJKMNPQRSTVWXYZ</code> (no <code>IOLU</code>)</td>\n</tr>\n<tr>\n<td><strong>Base-58</strong> (<a href=\"http://www.flickr.com/groups/api/discuss/72157616713786392/\" target=\"_blank\">from Flickr</a>)</td>\n<td><code>123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ</code> (no <code>0lIO</code>)</td>\n</tr>\n</table>\n\nOther:\n\n<table>\n<tr>\n<td><strong>Base-64</strong> (<a href=\"http://en.wikipedia.org/wiki/Base64\" target=\"_blank\">as standardized</a>)</td>\n<td><code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code></td>\n</tr>\n</table>\n\nBase-64 warning: besides there being several different standards, padding isn't currently added and line lengths aren't tracked. Not recommended for use with APIs that expect formal base-64 strings!\n\n## License\n\n[MIT license](http://aseemk.mit-license.org/). (c) 2012-2014 Aseem Kishore\nand [contributors](https://github.com/aseemk/bases.js/graphs/contributors).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aseemk/bases.js.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "0.2.1"
}
